$transparent: rgba( 0, 0, 0, 0 );
$black-50: rgba( 0, 0, 0, 0.5 );
$black-75: rgba( 0, 0, 0, 0.75 );
$white: rgba( 255, 255, 255, 1 );
$green: rgba( 0, 255, 0, 0.9 );
$cornerX: 1vw;
$cornerY: 1vh;
$itemWidth: calc( 256px * 1.2 );
$itemMargin: 4px;
$square-Button: 48px;
$height-ListItem: 24px;
$letterSize: 16px;
$border: 8px;

img.emphasis[src*=blob] {
    box-sizing: border-box !important;
    animation: blinkBorder 1s infinite;
    border: $border solid;
}
@keyframes blinkBorder {
    0% {
        border-color: rgba( 0, 255, 0, 0.9 );
    }
    50% {
        border-color: rgba( 0, 0, 0, 0.75 );
    }
    100% {
        border-color: rgba( 0, 255, 0, 0.9 );
    }
}
@keyframes marqueeLeftFirst {
    0% {
        transform: translate( 0, 0 );
    }
    100% {
        transform: translate( -100%, 0 );
    }
}
@keyframes marqueeLeftSecond {
    0% {
        transform: translate( 100%, 0 );
    }
    100% {
        transform: translate( 0%, 0 );
    }
}
@keyframes NOTICE {
    0% {
        opacity: 0;
        display: none;
    }
    25% {
        opacity: 1;
        color: rgba( 138, 252, 252, 0.80 );
    }
    75% {
        opacity: 1;
        color: rgba( 183, 255, 116, 0.80 );
    }
    100% {
        opacity: 0;
        display: none;
    }
}
.ComicGrabber {
    .CG-invisible { display: none !important; }
    &.CG-menu > .CG-notice {
        position: fixed !important;
        left: 50vw !important;
        top: 50vh !important;
        width: max-content !important;
        height: calc( #{$height-ListItem} * 2 ) !important;
        line-height: calc( #{$height-ListItem} * 2 ) !important;
        padding: 0 $letterSize 0 $letterSize !important;
        transform: translate( -50%, -50% );
        background: $black-75 !important;
        color: $white !important;
        border: {
            radius: $border !important;
        }
        animation: NOTICE 1.5s linear 0s infinite alternate forwards !important;
    }

    &.CG-menu, &.CG-menu * {
        box-sizing: border-box !important;
        padding: 0;
        margin: 0;
        font-family: 'Times New Roman', 'Malgun Gothic';
        font-size: $letterSize !important;
        line-height: $height-ListItem !important;
        text-align: center;
        transition-duration: 500ms;
    }
    
    &.CG-menu {
        position: fixed;
        z-index: 999999;
        bottom: calc( #{$cornerY} + #{$square-Button} );
        left: $cornerX;
        max-height: 100vh;
        max-width: 100vw;
        > .CG-list {
            max-height: 0;
            overflow: hidden;
            > .CG-item {
                position: relative;
                width: $itemWidth;
                display: flex;
                margin: $itemMargin;
                border-radius: $border;
                background: $black-75;
                color: $white;
                * {
                    height: $height-ListItem;
                    width: 100%;
                    display: inline-block;
                    color: $white;
                }
                > .CG-label {
                    width: calc( 100% * 2 / 5 );
                    > label {
                        cursor: pointer;
                    }
                    &~ .CG-text {
                        width: calc( 100% * 3 / 5 );
                        > input, > select { border-radius: 0 $border $border 0; }
                    }
                }
                > .CG-text {
                    > input, > select {
                        caret-color: $white;
                        text-align: center;
                        display: block;
                        border: {
                            width: 0;
                            radius: $border;
                        }
                        background: $black-50;
                    }
                }
                > .CG-row {
                    width: $itemWidth;
                    .CG-checkbox {
                        background: $black-50;
                        border-radius: $border;
                        cursor: pointer;
                        &.checked {
                            color: $green;
                            &:before {
                                content: "";
                                width: calc( #{$letterSize} / 2 );
                                height: $letterSize;
                                border: solid $green {
                                    width: 0 3px 3px 0;
                                };
                                transform: rotate( 45deg ) {
                                    origin: top;
                                };
                                display: inline-flex;
                            }
                        }
                    }
                    > .CG-moveChapter {
                        width: 50%;
                        &:first-child {
                            border: {
                                width: 0;
                                radius: $border 0 0 $border;
                            }
                        }
                        &:last-child {
                            border: {
                                width: 0;
                                radius: 0 $border $border 0;
                            }
                        }
                        &:hover {
                            background: $black-50;
                        }
                    }
                }
                > .CG-row#filenameRuleResult {
                    position: relative;
                    overflow: hidden;
                    > label {
                        position: absolute;
                        top: 0;
                        left: 0;
                        padding: 0 $border 0 0;
                        min-width: 100%;
                        width: max-content;
                        max-width: max-content;
                        background: linear-gradient( to right, rgba( 7, 255, 175, 1 ), rgba( 255, 179, 239, 1 ) );
                        -webkit-background-clip: text;
                        -webkit-text-fill-color: transparent;
                        font-weight: bold;
                        &:first-child {
                            animation: marqueeLeftFirst 5s infinite linear;
                        }
                        &:last-child {
                            animation: marqueeLeftSecond 5s infinite linear;
                        }
                    }
                }
            }
        }
        > .CG-load-progress:not(:hover) ~ .CG-list {
            &:not(:hover):not(.NoOutSide) {
                > .CG-item > .CG-row.CG-OutSide.CG-SelectiveInvisible {
                    opacity: 0 !important;
                }
                > .CG-item > .CG-row.CG-OutSide {
                    position: fixed !important;
                    background: $black-75 !important;
                    border-radius: $border !important;
                }
                > .CG-item > .CG-row.CG-OutSide#filenameRuleResult {
                    left: calc( #{$cornerX} );
                    bottom: calc( #{$cornerY} + #{$square-Button} );
                    width: calc( #{$itemWidth} / 2 );
                    margin: 0 0 $itemMargin 0;
                }
                > .CG-item > .CG-row.CG-OutSide {
                    left: calc( #{$cornerX} + #{$letterSize} / 2 + #{$square-Button} );
                    width: max-content;
                    height: $height-ListItem;
                    > .CG-checkbox {
                        padding: 0 calc( #{$letterSize} / 2 ) 0 calc( #{$letterSize} );
                        background: none;
                    }
                    &.CG-First {
                        bottom: calc( #{$cornerY} + #{$height-ListItem} * 0 );
                    }
                    &.CG-Second {
                        bottom: calc( #{$cornerY} + #{$height-ListItem} * 1 );
                    }
                }
            }
        }
        > .CG-menu-cover {
            position: fixed;
            z-index: 99999;
            left: calc( #{$cornerX} + #{$letterSize} / 2 + #{$square-Button} );
            bottom: calc( #{$cornerY} + #{$height-ListItem} * 0 );
            width: max-content;
            height: calc( #{$height-ListItem} * 2 );
            opacity: 0;
        }
        > .CG-load-progress, > .CG-menu-button {
            position: fixed;
            bottom: calc( #{$cornerY} + #{$square-Button} / 2 );
            left: calc( #{$cornerX} + #{$square-Button} / 2 );
            transform: translate( -50%, +50% );
        }
        > .CG-load-progress {
            z-index: 999999;
        }
        > .CG-menu-button {
            z-index: 99999;
            height: $square-Button;
            width: $square-Button;
            border-radius: 50%;
            background: $black-75;
            &::before {
                color: $white;
                font-size: $square-Button;
                line-height: $square-Button;
                perspective-origin: 0 0;
                transform-origin: 0 0;
                content: "+";
            }
            &.CG-alert {
                transform: translate( -50%, +50% ) rotateZ( 0deg ) !important;
                &::before {
                    content: "!";
                    color: rgba( 255, 0, 0, 0.9 );
                }
            }
        }
        > .CG-load-progress:hover ~ .CG-menu-button, > .CG-list:hover ~ .CG-menu-button {
            transform: translate( -50%, +50% ) rotateZ( 45deg );
        }
        > .CG-list:hover, > .CG-load-progress:hover ~ .CG-list {
            max-height: 100vh;
            max-width: 100vw;
        }
    }
}